{
  "name": "7boss-ordering",
  "version": "1.0.7-beta",
  "description": "",
  "main": "dist/server.js",
  "scripts": {
    "clean": "rm -rf node_modules && rm -rf dist && rm -rf package-lock.json && cd client && rm -rf package-lock.json  && rm -rf node_modules",
    "preinstall-mustwork": "cd client && npm install && npm audit fix --force ",
    "preinstall": "cd client && npm install ",
    "prebuild": "cd client && npm run build",
    "oldstart": "concurrently \"npm run server \" \"npm run client \" ",
    "test": "nyc mocha-webpack --webpack-config ./config/webpack.config.dev.js \"./controller/**/*.test.js\" --timeout 10000",
    "build:dev": "webpack --config config/webpack.config.dev.js",
    "build:prod": "webpack --config config/webpack.config.prod.js",
    "build": "webpack --config config/webpack.config.prod.js",
    "server": "npm run build:dev && npm run watch:server",
    "bff": "cd ../../storesystemservice/app && git pull && npm start",
    "oldserver": "concurrently \"npm run build:dev\"  \"nodemon ./dist/server.js \"",
    "client": "cd client && npm start",
    "build:docker": "docker build --rm -t localbossalp:latest .",
    "start:docker:local": "docker run -p 5000:5000 -t localbossalp",
    "local": "cd client && npm run build && cd .. && npm run build:dev && node dist/server.js",
    "installx:server": "rm -rf node_modules && npm install",
    "installx:client": "cd client && rm -rf node_modules && npm install && cd ..",
    "npminstall": "npm-run-all install:*",
    "start": "npm-run-all --parallel watch:server watch:build watch:client",
    "watch:build": "webpack --watch --config config/webpack.config.dev.js",
    "watch:server": "nodemon \"./dist/server.js\" ",
    "watch:client": "cd client && npm start"
  },
  "config": {
    "unsafe-perm": true
  },
  "homepage": "http://localhost:5000/",
  "nyc": {
    "include": [
      "**/*.js"
    ],
    "extension": [
      "*.js"
    ],
    "reporter": [
      "text-summary",
      "html"
    ],
    "sourceMap": true,
    "instrument": true
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@7eleven/winston-kinesis": "^1.0.18",
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/node": "^7.2.2",
    "@babel/plugin-transform-classes": "^7.9.2",
    "@babel/plugin-transform-runtime": "^7.9.0",
    "@babel/preset-env": "^7.3.1",
    "@babel/register": "^7.0.0",
    "aes-js": "^3.1.2",
    "aws-sdk": "^2.526.0",
    "babel-loader": "^8.0.5",
    "babel-polyfill": "^6.26.0",
    "bluebird": "^3.7.0",
    "body-parser": "^1.18.3",
    "chalk": "^2.4.2",
    "compression": "^1.7.4",
    "copy-webpack-plugin": "^5.1.1",
    "cors": "^2.8.5",
    "dateformat": "^3.0.3",
    "dotenv": "^6.0.0",
    "express": "^4.16.4",
    "express-http-proxy": "^1.5.1",
    "express-static-gzip": "^2.0.5",
    "helmet": "^3.21.1",
    "ioredis": "^4.14.0",
    "jsonwebtoken": "^8.5.1",
    "jwt-decode": "^2.2.0",
    "moment": "^2.24.0",
    "node-rsa": "^1.0.5",
    "randomatic": "^3.1.1",
    "request": "^2.88.0",
    "request-ip": "^2.1.3",
    "uuidv4": "^5.0.1",
    "webpack": "5.94.0",
    "webpack-cli": "^3.3.5",
    "webpack-node-externals": "^1.7.2",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/node": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/plugin-proposal-decorators": "^7.8.3",
    "@babel/preset-env": "^7.3.1",
    "@babel/register": "^7.0.0",
    "@types/mocha": "^5.2.5",
    "babel-loader": "^8.0.5",
    "babel-polyfill": "^6.26.0",
    "browser-sync": "^2.26.7",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "concurrently": "^4.1.1",
    "dotenv": "^6.0.0",
    "esm": "^3.2.25",
    "mocha": "^5.2.0",
    "mocha-webpack": "^2.0.0-beta.0",
    "nock": "^10.0.6",
    "node-mocks-http": "^1.7.5",
    "nodemon": "^1.19.1",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.0",
    "sinon": "^7.2.4",
    "supertest": "^4.0.2",
    "webpack": "5.94.0",
    "webpack-cli": "^3.3.5",
    "webpack-node-externals": "^1.7.2"
  }
}
